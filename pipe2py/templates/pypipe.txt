# -*- coding: utf-8 -*-
# vim: sw=4:ts=4:expandtab
# Pipe {{ pipe_name }} generated by pipe2py

from pipe2py import Context
from pipe2py.modules.pipeforever import pipe_forever

{%- for module in modules %}
{%- if not module.sub_pipe %}
from pipe2py.modules.{{ module.name }} import {{ module.pipe_name }}
{%- endif -%}
{%- endfor -%}

{%- for module in modules %}
{%- if module.sub_pipe %}
from pipe2py.pypipelines.{{ module.name }} import {{ module.pipe_name }}
{%- endif -%}
{%- endfor %}


def {{ pipe_name }}(context=None, _INPUT=None, conf=None, **kwargs):
    # todo: insert pipeline description here

    if context and context.describe_input:
        return {{ inputs }}

    if context and context.describe_dependencies:
        return {{ dependencies }}

    forever = pipe_forever()
{% for module in modules -%}
    {% if module.id in embedded_pipes %}
    pipe_{{ module.id }} = {{ module.pipe_name }}
    {% endif -%}
{%- endfor %}

{%- for module in modules -%}
    {%- if not module.id in embedded_pipes %}
    {{ module.id }} = {{ module.pipe_name }}(
        {{ module.args }})
    {% endif -%}
{%- endfor %}
    return {{ last_module }}


if __name__ == "__main__":
    pipeline = {{ pipe_name }}(Context())

    for i in pipeline:
        print i
